name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.changes.outputs.api }}
      web: ${{ steps.changes.outputs.web }}
      root: ${{ steps.changes.outputs.root }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            api:
              - 'apps/api/**'
              - 'package.json'
              - 'package-lock.json'
              - 'yarn.lock'
            root:
              - 'package.json'
              - 'package-lock.json'
              - 'yarn.lock'
              - '.github/workflows/**'
setup:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.web == 'true' || needs.changes.outputs.root == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

  api:
    runs-on: ubuntu-latest
    needs: [changes, setup]
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.root == 'true'
    defaults:
      run:
        working-directory: apps/api
    strategy:
      matrix:
        node-version: [20, 22]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
            
      - name: Install dependencies
        run: |
          cd ../..
          npm ci
          
      - name: Format check
        run: npm run format:check
        continue-on-error: false
        
      - name: Lint
        run: npm run lint
        
      - name: Type check
        run: npm run build
        
      - name: Run tests
        run: npm run test
        env:
          NODE_ENV: test
          
      - name: Run e2e tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        if: matrix.node-version == 20
        with:
          file: apps/api/coverage/lcov.info
          flags: api
          name: api-coverage
  # Security and dependency checks
  security:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for outdated dependencies
        run: npm outdated
        continue-on-error: true

  summary:
    runs-on: ubuntu-latest
    needs: [api, web, security]
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| API | ${{ needs.api.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Web | ${{ needs.web.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY